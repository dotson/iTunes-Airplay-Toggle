<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.dotson.airplaytoggle</string>
	<key>connections</key>
	<dict>
		<key>02000A10-FAFC-41D3-A631-4A2DFE3472ED</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5FCDDED3-9F96-4685-B23B-0E3A3D2AC8A3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>09BE490C-0DE2-47EB-B461-5A574FBD3E1C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2824B118-BE32-4712-8640-01D08915BB33</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>20241E62-546E-4F1B-B49F-4917E4B9A948</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2824B118-BE32-4712-8640-01D08915BB33</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E6D13FF5-B985-40C4-8B47-D07D78EB77FD</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>81C4695E-362D-4054-A2B1-A9FE73165236</string>
				<key>modifiers</key>
				<integer>524288</integer>
				<key>modifiersubtext</key>
				<string>Select to temporarily use alternate action.</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>38FF712E-4862-4573-8F73-9F604CC6B091</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>81C4695E-362D-4054-A2B1-A9FE73165236</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>EB786CAF-8AA6-4866-A84C-B7301B3357F7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>C. Dotson</string>
	<key>description</key>
	<string>Toggle the state of your Airplay devices.</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>iTunes Airplay Toggle</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/dotson/iTunes-Airplay-Toggle/master/Source/info.plist'
readonly workflow_url='https://github.com/dotson/iTunes-Airplay-Toggle/raw/master/iTunes%20Airplay%20Toggle.alfredworkflow'
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E6D13FF5-B985-40C4-8B47-D07D78EB77FD</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>passthroughargument</key>
				<true/>
				<key>variables</key>
				<dict>
					<key>alt</key>
					<string>true</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>81C4695E-362D-4054-A2B1-A9FE73165236</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>Airplay Device Updated</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>5FCDDED3-9F96-4685-B23B-0E3A3D2AC8A3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>1179648</integer>
				<key>hotstring</key>
				<string>A</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>09BE490C-0DE2-47EB-B461-5A574FBD3E1C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting available Airplay devices...</string>
				<key>script</key>
				<string>set workflowFolder to do shell script "pwd"set wlib to load script POSIX file (workflowFolder &amp; "/q_workflow.scpt")set wf to wlib's new_workflow()set action to (system attribute "default_action")if action is "toggle" then	set action to "Toggle Each"else	set action to "Select One"end ifadd_result of wf without isValid given theUid:"", theArg:"", theTitle:"Available AirPlay Devices:", theAutocomplete:"", theSubtitle:"Select to toggle state via default method: " &amp; action, theIcon:"icon.png", theType:"", theQuicklookurl:""tell application "Music"		set apDevices to (get name of every AirPlay device)	set apNames to {}	set apSelectedBool to {}	set apSelected to {}		repeat with i from 1 to length of apDevices		set thisDevice to item i of apDevices				set thisName to thisDevice as string		set the end of apNames to thisName		set thisBool to selected of AirPlay device thisDevice		set the end of apSelectedBool to thisBool		if thisBool is true then			set thisSel to "On"			set the end of apSelected to thisSel		else			set thisSel to "Off"			set the end of apSelected to thisSel		end if				add_result of wf with isValid given theUid:"", theArg:thisName, theTitle:thisName, theAutocomplete:"", theSubtitle:"Current State: " &amp; thisSel, theIcon:"icon.png", theType:"", theQuicklookurl:""			end repeat	end tellwf's to_xml("")</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>DeviceSearch.applescript</string>
				<key>subtext</key>
				<string>Toggle the playing state of your Airplay devices.</string>
				<key>title</key>
				<string>iTunes Airplay Toggle</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>2824B118-BE32-4712-8640-01D08915BB33</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>4</integer>
				<key>script</key>
				<string>set query to "{query}"

set workflowFolder to do shell script "pwd"
set wlib to load script POSIX file (workflowFolder &amp; "/q_workflow.scpt")
set wf to wlib's new_workflow()

set action to (system attribute "default_action")
set alt to (system attribute "alt")

if alt is "true" then
	if action is "toggle" then set action to "select"
else if action is "select" then
	set action to "toggle"
end if

tell application "Music"
	
	set apDevices to (get name of every AirPlay device)
	
	-- Toggle Action
	if action is "toggle" then
		
		repeat with i from 1 to length of apDevices
			set thisDevice to (item i of apDevices) as string
			
			if thisDevice is query then
				set oldState to selected of AirPlay device thisDevice
				set newState to (not oldState)
				set selected of AirPlay device thisDevice to newState
				if newState is true then
					set newState to "On"
				else
					set newState to "Off"
				end if
				
				return thisDevice &amp; ": " &amp; newState
				
			end if
		end repeat
	end if
	
	-- Select Action
	if action is "select" then
		
        -- Two loops needed. Turn the chosen device ON then turn off all remaining devices
		repeat with i from 1 to length of apDevices
			set thisDevice to (item i of apDevices) as string
			if thisDevice is query then
				set selected of AirPlay device thisDevice to true
			end if
		end repeat
		
		repeat with i from 1 to length of apDevices
			set thisDevice to (item i of apDevices) as string
			if thisDevice is not query then
				set selected of AirPlay device thisDevice to false
			end if
		end repeat
		
		return query &amp; " is now selected."
	end if
	
end tell</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>DeviceChange.applescript</string>
				<key>type</key>
				<integer>8</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>02000A10-FAFC-41D3-A631-4A2DFE3472ED</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>Computer</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>aptoggle1</string>
				<key>triggername</key>
				<string>Computer</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>20241E62-546E-4F1B-B49F-4917E4B9A948</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>Stereo</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>aptoggle2</string>
				<key>triggername</key>
				<string>Stereo</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>38FF712E-4862-4573-8F73-9F604CC6B091</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>Apple TV</string>
				<key>argumenttype</key>
				<integer>3</integer>
				<key>triggerid</key>
				<string>aptoggle3</string>
				<key>triggername</key>
				<string>Apple TV</string>
				<key>workflowonly</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.remote</string>
			<key>uid</key>
			<string>EB786CAF-8AA6-4866-A84C-B7301B3357F7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># iTunes Airplay Toggle

*Alfred Workflow to toggle the playing state of your Airplay devices.*

**Starting with version 1.6.0, this workflow is compatible with Alfred 5.**

The default method is "toggle". This will toggle the state for only the selected device. The typical use for this would be if you have more than one device that you like to have turned ON at the same time (i.e., listening in the main room and a second room).

If you prefer to use only one device at a time, change the default method in the variable window to "select". This will toggle ON the selected device and toggle OFF all the others. The typical use for this would be if you prefer to listen on only one device at a time (i.e., listening through computer speakers or headphones).

You can always choose to use the non-default method at any time by actioning on the device while pressing the 'option' key. This will cause Alfred to run whichever method is not the default.</string>
	<key>uidata</key>
	<dict>
		<key>02000A10-FAFC-41D3-A631-4A2DFE3472ED</key>
		<dict>
			<key>xpos</key>
			<real>605</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>09BE490C-0DE2-47EB-B461-5A574FBD3E1C</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>20241E62-546E-4F1B-B49F-4917E4B9A948</key>
		<dict>
			<key>colorindex</key>
			<integer>7</integer>
			<key>xpos</key>
			<real>205</real>
			<key>ypos</key>
			<real>300</real>
		</dict>
		<key>2824B118-BE32-4712-8640-01D08915BB33</key>
		<dict>
			<key>xpos</key>
			<real>205</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>38FF712E-4862-4573-8F73-9F604CC6B091</key>
		<dict>
			<key>colorindex</key>
			<integer>7</integer>
			<key>xpos</key>
			<real>205</real>
			<key>ypos</key>
			<real>420</real>
		</dict>
		<key>5FCDDED3-9F96-4685-B23B-0E3A3D2AC8A3</key>
		<dict>
			<key>xpos</key>
			<real>770</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>81C4695E-362D-4054-A2B1-A9FE73165236</key>
		<dict>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>165</real>
		</dict>
		<key>E6D13FF5-B985-40C4-8B47-D07D78EB77FD</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>405</real>
			<key>ypos</key>
			<real>15</real>
		</dict>
		<key>EB786CAF-8AA6-4866-A84C-B7301B3357F7</key>
		<dict>
			<key>colorindex</key>
			<integer>7</integer>
			<key>note</key>
			<string>Examples of Remote trigger inputs that can be added to the Alfred iOS app</string>
			<key>xpos</key>
			<real>205</real>
			<key>ypos</key>
			<real>540</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>pairs</key>
				<array>
					<array>
						<string>Toggle Each</string>
						<string>toggle</string>
					</array>
					<array>
						<string>Select One</string>
						<string>select</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>Toggle Each allows you to have more than one device on at a time. Select One turns on only the device you select.</string>
			<key>label</key>
			<string>Default Action Type</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>default_action</string>
		</dict>
	</array>
	<key>version</key>
	<string>1.6.2</string>
	<key>webaddress</key>
	<string>https://github.com/dotson/iTunes-Airplay-Toggle</string>
</dict>
</plist>
